upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F,xlim=c(1,120))
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F,xlim=c(1,120))
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)))
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F,xlim=c(1,120))
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
Arrows(25,lower[25],25,upper[25])
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
Arrows(25,lower[25],25,upper[25],arr.type = "T")
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
Arrows(25,lower[25],25,upper[25],arr.type = "T",code=3)
s2=.2^2
s2theta=.05^2
L=200
I=100
p=(1:I)/(I+1)
theta=qnorm(p,.1,sqrt(s2theta))
lower=theta-4*sqrt(s2/L)
upper=theta+4*sqrt(s2/L)
plot(1:I,theta,typ='l',ylim=c(min(lower),max(upper)),
ylab=expression(theta),xlab="Individuals",
axes=F)
abline(h=qnorm(c(.16,.5,.85),.1,sqrt(s2theta)),lty=2)
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
lines(1:I,theta)
pts=qnorm(c(.16,.84),.1,sqrt(s2theta))
axis(2)
axis(1,at=c(1,100))
points(50,theta[50],cex=2,pch=19)
points(c(16,84),theta[c(16,84)],pch=21,bg='white',cex=2)
Arrows(16,lower[16],16,upper[16],arr.type = "T",code=3)
1/.0625
source('readData.R')
source('lib.R')
d=readRMFlankI()
out=genModOneTask(d,priors=priorOne)
thetaCI=apply(out$theta,2,quantile(.025,.975))
thetaCI=apply(out$theta,2,quantile,p=c(.025,.975))
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o])
source('readData.R')
source('lib.R')
d=readRMFlankI()
#out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
#source('readData.R')
#source('lib.R')
#d=readRMFlankI()
#out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower,rev(upper)),
col='lightblue',border=NA)
#source('readData.R')
#source('lib.R')
#d=readRMFlankI()
#out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
#source('readData.R')
#source('lib.R')
#d=readRMFlankI()
#out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMFlankII()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMStroopI()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMStroopI()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMStroopII()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadI(task=1)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadI(task=2)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadI(task=3)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadII(task=3)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadII(task=1)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadI(task=1)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadI(task=2)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
readWhiteheadI
cleanWhitehead1
#source('readData.R')
#source('lib.R')
d=readWhiteheadII(task=2)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(theta)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readWhiteheadII(task=2)
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMFlankI()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o])
lines(1:I,eff[o])
#source('readData.R')
#source('lib.R')
d=readRMFlankI()
out=genModOneTask(d,priors=priorOne)
lower=apply(out$theta,2,quantile,p=.025)
upper=apply(out$theta,2,quantile,p=.975)
theta=apply(out$theta,2,mean)
mrt=tapply(d$rt,list(d$sub,d$cond),mean)
eff=mrt[,2]-mrt[,1]
I=length(eff)
o=order(eff)
plot(1:I,eff[o],typ='n')
polygon(c(1:I,I:1),c(lower[o],rev(upper[o])),
col='lightblue',border=NA)
lines(1:I,theta[o],lwd=2,col='darkblue')
lines(1:I,eff[o],lty=2,lwd=2)
par(mfrow=c(1,3),cex=1.0,mgp=c(2,1,0),mar=c(4,4,1,1))
myStats=function(theta){
m=apply(theta,2,mean)
lo=apply(theta,2,quantile,p=.025)
hi=apply(theta,2,quantile,p=.975)
cbind(lo,m,hi)
}
stats=1000*myStats(outLF$theta)
alphaStats=1000*myStats(outLF$alpha)
plot(effect[,3],effect[,3],typ='n',
xlab="Sample Effect (ms)",
ylab=expression(paste("Model Effect, ",theta,", (ms)")))
abline(0,1,col='blue')
points(effect[,3],stats[,2],pch=19,cex=.9)
mtext(side=3,line=-1,adj=.1,"Congruency")
mtext(side=3,adj=0,"A.",cex=1.2)
plot(ave[,3],ave[,3],typ='n',
xlab="Sample Speed (ms)",
ylab=expression(paste("Model Speed, ",alpha,", (ms)")))
abline(0,1,col='blue')
points(ave[,3],alphaStats[,2]+stats[,2]/2,pch=19,cex=.9)
mtext(side=3,line=-1,adj=.1,"Speed")
mtext(side=3,adj=0,"B.",cex=1.2)
cTheta=cAlpha=array(dim=c(1500,4,4))
cFac=array(dim=c(20000,4,4))
for (m in 501:2000){
cTheta[m-500,,]=cor(outRM4$theta[m,,])
cAlpha[m-500,,]=cor(outRM4$alpha[m,,])
}
for (m in 1:20000)
cFac[m,,]=cov2cor(outer(outRM4Fac$nu[m,],outRM4Fac$nu[m,])+diag(4)*outRM4Fac$delta[m])
plot(density(cAlpha[,1,3]),xlim=c(-.6,1),xlab="Correlation Coefficient",main="",ylab="Posterior Density",col='blue',lwd=2)
lines(density(cTheta[,1,3]),col='red',lwd=2)
lines(density(cFac[,1,3]),col='darkgreen',lwd=2)
mtext(side=3,adj=0,"C.",cex=1.2)
box()
load('rm4Mod.RData')
ls()
rmCor
rm(list=ls())
load('rm4Mod.RData')
getwd()
